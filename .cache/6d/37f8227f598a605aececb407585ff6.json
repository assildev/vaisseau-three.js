{"id":"shaders/test/vertex.glsl","dependencies":[{"name":"C:\\Users\\Assil Ben Hamida\\Desktop\\ecole multimedia\\webGL\\projet\\package.json","includedInParent":true,"mtime":1579793454345}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\n#define M_PI 3.1415926535897932384626433832795\\n\\nuniform float uTime;\\nuniform vec2 uFrequency;\\n\\nvarying vec3 vColor;\\n\\nvoid main()\\n{\\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\\n\\n    float poleProximity = pow(abs((uv.y - 0.5) * 2.0), 3.0);\\n\\n    float intensity = sin(uv.x * M_PI * uFrequency.x) * sin(uv.y * M_PI * uFrequency.y - uTime * 0.002);\\n    intensity *= 1.0 - poleProximity;\\n    modelPosition.xyz += normal * intensity;\\n\\n    vec3 startColor = vec3(0.4, 0.0, 0.2);\\n    vec3 endColor = vec3(1.0, 1.0, 0.6);\\n\\n    vColor = mix(startColor, endColor, intensity);\\n\\n    vec4 viewPosition = viewMatrix * modelPosition;\\n    vec4 projectedPosition = projectionMatrix * viewPosition;\\n\\n    gl_Position = projectedPosition;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shaders/test/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shaders/test/vertex.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shaders/test/vertex.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shaders/test/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shaders/test/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":797},"source":"shaders/test/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"shaders/test/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\n#define M_PI 3.1415926535897932384626433832795\\n\\nuniform float uTime;\\nuniform vec2 uFrequency;\\n\\nvarying vec3 vColor;\\n\\nvoid main()\\n{\\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\\n\\n    float poleProximity = pow(abs((uv.y - 0.5) * 2.0), 3.0);\\n\\n    float intensity = sin(uv.x * M_PI * uFrequency.x) * sin(uv.y * M_PI * uFrequency.y - uTime * 0.002);\\n    intensity *= 1.0 - poleProximity;\\n    modelPosition.xyz += normal * intensity;\\n\\n    vec3 startColor = vec3(0.4, 0.0, 0.2);\\n    vec3 endColor = vec3(1.0, 1.0, 0.6);\\n\\n    vColor = mix(startColor, endColor, intensity);\\n\\n    vec4 viewPosition = viewMatrix * modelPosition;\\n    vec4 projectedPosition = projectionMatrix * viewPosition;\\n\\n    gl_Position = projectedPosition;\\n}\";"},"lineCount":null}},"error":null,"hash":"f6bf97db10c8709b33f63d5f03d2db1d","cacheData":{"env":{}}}